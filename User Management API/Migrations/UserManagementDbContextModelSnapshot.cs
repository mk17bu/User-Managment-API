// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Management_API.DbContexts;

#nullable disable

namespace User_Management_API.Migrations
{
    [DbContext(typeof(UserManagementDbContext))]
    partial class UserManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("User_Management_API.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Nicee",
                            Date = new DateTime(2024, 5, 14, 9, 0, 32, 978, DateTimeKind.Local).AddTicks(2889),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "I'll teach you how to defend!",
                            Date = new DateTime(2024, 5, 14, 10, 0, 32, 978, DateTimeKind.Local).AddTicks(2892),
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Content = "Let's gooo!",
                            Date = new DateTime(2024, 5, 14, 11, 0, 32, 978, DateTimeKind.Local).AddTicks(2895),
                            PostId = 2,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("User_Management_API.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Joshua Kimmich has officially joined FC Barcelona.",
                            Date = new DateTime(2024, 5, 14, 9, 0, 32, 978, DateTimeKind.Local).AddTicks(2815),
                            Title = "Welcome Joshua Kimmich!",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "I'm very happy to be here and I'll try my best to fit the team.",
                            Date = new DateTime(2024, 5, 14, 10, 0, 32, 978, DateTimeKind.Local).AddTicks(2868),
                            Title = "Hello team!",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("User_Management_API.Entities.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Reaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            Type = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            PostId = 2,
                            Type = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            PostId = 2,
                            Type = 2,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("User_Management_API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Marc-André",
                            LastName = "ter Stegen",
                            Mail = "tersteguen@fcb.com"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Andreas",
                            LastName = "Christensen",
                            Mail = "andreaschristensen@fcb.com"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jules",
                            LastName = "Koundé",
                            Mail = "juleskounde@fcb.com"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Joshua",
                            LastName = "Kimmich",
                            Mail = "joshuakimmich@fcb.com"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Robert",
                            LastName = "Lewandoski",
                            Mail = "robertlewandoski@fcb.com"
                        });
                });

            modelBuilder.Entity("User_Management_API.Entities.Comment", b =>
                {
                    b.HasOne("User_Management_API.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User_Management_API.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User_Management_API.Entities.Post", b =>
                {
                    b.HasOne("User_Management_API.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("User_Management_API.Entities.Reaction", b =>
                {
                    b.HasOne("User_Management_API.Entities.Post", "Post")
                        .WithMany("Reactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User_Management_API.Entities.User", "User")
                        .WithMany("Reactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User_Management_API.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("User_Management_API.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("Reactions");
                });
#pragma warning restore 612, 618
        }
    }
}
